<Window x:Class="CursorFinderClient.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:CursorFinderClient"
        mc:Ignorable="d"
        Title="MainWindow"
        Height="450"
        Width="650"
        MaxWidth='650'
        MinWidth="650"
        MaxHeight="450"
        MinHeight="450">
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="RoundedButtonj" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="20" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#EAB01E"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="Red"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid Height="434" VerticalAlignment="Center">
        <Label FontSize="40"
           FontFamily="Arial">
            Records in Database:
        </Label>
        <TextBlock
            x:Name="DbRecordsCountTextBlock"
            FontSize="40"
            FontFamily="Arial"
            Margin="401,5,61,361">
        </TextBlock>
        <Button Style="{DynamicResource RoundedButtonj}" Content="Start"
                Name="StartButton"
                Background="Lime"
                Foreground="Black"
                FontFamily="Arial"
                FontSize="25"
                Height="60"
                Margin="357,311,99,63"
                Click="Start_Button_Click"/>
        <Button Style="{DynamicResource RoundedButtonj}" Content="Action List"
                Background="SkyBlue"
                Foreground="Black"
                FontFamily="Arial"
                FontSize="25"
                Height="60"
                Margin="91,311,365,63"
                Click="ActionList_Button_Click"/>
        <Button Style="{DynamicResource RoundedButtonj}" Content="Sign in as user"
                Background="SkyBlue"
                Foreground="Black"
                FontFamily="Arial"
                FontSize="22"
                Height="60"
                Margin="91,217,365,157"
                Click="User_Signin_Button_Click"/>
        <Button Style="{DynamicResource RoundedButtonj}"
                Name="ClearDbButton"
                Content="ClearDb"
                Background="SkyBlue"
                Foreground="Black"
                FontFamily="Arial"
                Visibility="Hidden"
                IsEnabled="False"
                FontSize="22"
                Height="60"
                Margin="238,119,224,255"
                Click="ClearDbButton_Click"/>
        <Button Style="{DynamicResource RoundedButtonj}" Content="Sign in as Admin"
                Background="SkyBlue"
                Foreground="Black"
                FontFamily="Arial"
                FontSize="22"
                Height="60"
                Margin="357,217,99,157"
                Click="Admin_Signin_Button_Click"/>
        <Label Name="ConnectionLabel"
               Margin="0,391,0,10"
               FontFamily="Arial"
               FontSize="18">
        </Label>
        <ToggleButton
            x:Name="NotificationToggle"
            Height="35"
            Width="75"
            Margin="153,74,397,325"
            Checked="NotificationToggle_Checked"
            Unchecked="NotificationToggle_Unchecked">
            <ToggleButton.Template>
                <ControlTemplate TargetType="ToggleButton">
                    <Border x:Name="B1"
                            Background="SkyBlue"
                            CornerRadius="20"
                            Padding="1.">
                        <Border x:Name="B2"
                                Background="White"
                                Width="{TemplateBinding Height}"
                                CornerRadius="20"
                                HorizontalAlignment="Left">
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="B2" Property="HorizontalAlignment" Value="Right"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </ToggleButton.Template>
        </ToggleButton>
        <Label Name="NotificationLabel"
               Margin="10,72,497,322"
               FontFamily="Arial"
               FontSize="22">
            Notifications
        </Label>
    </Grid>
</Window>
